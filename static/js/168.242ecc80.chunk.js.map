{"version":3,"file":"static/js/168.242ecc80.chunk.js","mappings":"sPACA,GAAgB,YAAc,6BAA6B,YAAc,6BAA6B,YAAc,8B,SCsDpH,EAhDgB,WACZ,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAqBR,OAnBAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAU,mCAAG,2FAEfJ,EAAW,MAFI,mBAKIK,EAAAA,EAAAA,IAAgBJ,GALpB,OAKTK,EALS,OAOfN,EAAWM,GAPI,gDAWfC,QAAQC,IAAR,MAXe,yDAAH,qDAchBJ,GACH,GAAE,CAACH,IAGGF,GAA8B,IAAnBA,EAAQU,QACtB,cAAGC,UAAWC,EAAAA,eAAd,oEACA,gCACSZ,QADT,IACSA,OADT,EACSA,EAASa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,gBAAaL,UAAWC,EAAAA,YAAxB,WACA,eAAGD,UAAWC,EAAAA,YAAd,oBAA0CG,MAC1C,cAAGJ,UAAWC,EAAAA,YAAd,SAAmCI,MAF1BF,EADC,KAU7B,C,8LCzCKG,EAAM,mCACNC,EAAW,gCAEJC,EAAkB,mCAAG,oGACPC,EAAAA,GAAAA,IAAA,UAAaF,EAAb,sCAAmDD,IAD5C,UAGN,OAFlBI,EADwB,QAGjBC,OAHiB,sBAIpB,IAAIC,MAAM,wBAJU,gCAOvBF,EAASd,KAAKiB,SAPS,2CAAH,qDAWlBC,EAAiB,mCAAG,WAAOC,GAAP,uFACNN,EAAAA,GAAAA,IAAA,UAAaF,EAAb,gCAA6CD,EAA7C,yBAAiES,IAD3D,UAGL,OAFlBL,EADuB,QAGhBC,OAHgB,sBAInB,IAAIC,MAAM,wBAJS,cAM7Bf,QAAQC,IAAIY,EAASd,MANQ,kBAOtBc,EAASd,KAAKiB,SAPQ,2CAAH,sDAWjBG,EAAkB,mCAAG,WAAOzB,GAAP,uFACPkB,EAAAA,GAAAA,IAAA,UAAaF,EAAb,iBAA8BhB,EAA9B,oBAAiDe,IAD1C,UAGN,OAFlBI,EADwB,QAGjBC,OAHiB,sBAIpB,IAAIC,MAAM,wBAJU,gCAMvBF,EAASd,MANc,2CAAH,sDASlBqB,EAAe,mCAAG,WAAOd,GAAP,uFACJM,EAAAA,GAAAA,IAAA,UAAaF,EAAb,iBAA8BJ,EAA9B,4BAAoDG,IADhD,UACrBI,EADqB,OAE/Bb,QAAQC,IAAIY,GACgB,MAApBA,EAASC,OAHc,sBAIjB,IAAIC,MAAM,wBAJO,gCAMpBF,EAASd,KAAKsB,MANM,2CAAH,sDASfvB,EAAe,mCAAI,WAAOJ,GAAP,uFACLkB,EAAAA,GAAAA,IAAA,UAAaF,EAAb,iBAA8BhB,EAA9B,4BAAyDe,IADpD,UAGJ,OAFlBI,EADsB,QAGfC,OAHe,sBAIlB,IAAIC,MAAM,wBAJQ,gCAMrBF,EAASd,KAAKiB,SANO,2CAAJ,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","services/moviesApi.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewsItem\":\"Reviews_reviewsItem__Su53A\",\"reviewsName\":\"Reviews_reviewsName__Dzz-A\",\"reviewsText\":\"Reviews_reviewsText__pIre-\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/moviesApi';\n\nimport PropTypes from 'prop-types';\nimport styles from 'components/Reviews/Reviews.module.css'\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        const fetchMovie = async () => {\n          \n            setReviews(null)\n\n        try {\n            const data = await getMovieReviews(movieId)\n\n            setReviews(data)\n\n        } catch (error) {\n\n            console.log(error)\n        }\n    }\n        fetchMovie();\n    }, [movieId])\n\n    \n    return reviews && reviews.length === 0 ? (\n        <p className={styles.detailsMessage}>   className=We don't have any reviews for this movie</p>) : (\n        <div>\n                {reviews?.map(({ id, author, content }) =>\n                    <li key={id} className={styles.reviewsItem}>\n                    <p className={styles.reviewsName}>Author {author}</p>\n                    <p className={styles.reviewsText}>{content}</p>\n                </li>\n                )}\n            </div>\n    )\n\n\n}\n\nReviews.propTypes = {\n    reviews: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            author: PropTypes.string.isRequired,\n            content: PropTypes.string.isRequired,\n        })\n    )\n}\n\nexport default Reviews;","import axios from \"axios\";\n\nconst KEY = 'ffa446ff4e98eda704f81d136e56b989';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchPopularMovies = async () => {\n    const response = await axios.get(`${BASE_URL}trending/movie/day?api_key=${KEY}`);\n\n    if (response.status !== 200) {\n        throw new Error('Error, nothing found');\n      \n    }\n    return response.data.results;\n    \n};\n\nexport const fetchSearchMovies = async (query) => {\n    const response = await axios.get(`${BASE_URL}search/movie?api_key=${KEY}&page=1&query=${query}`);\n\n    if (response.status !== 200) {\n        throw new Error('Error, nothing found');\n    }\n    console.log(response.data)\n    return response.data.results;\n    \n};\n\nexport const fetchMoviesDetails = async (movieId) => {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}?api_key=${KEY}`)\n\n    if (response.status !== 200) {\n        throw new Error('Error, nothing found');\n    }\n    return response.data;\n};\n\nexport const getMovieCredits = async (id) => {\n    const response = await axios.get(`${BASE_URL}movie/${id}/credits?api_key=${KEY}`)\nconsole.log(response)\n    if (response.status !== 200) {\n        throw new Error('Error, nothing found');\n    }\n    return response.data.cast;\n}\n\nexport const getMovieReviews  = async (movieId) => {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}`)\n\n    if (response.status !== 200) {\n        throw new Error('Error, nothing found');\n    }\n    return response.data.results;\n}"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","fetchMovie","getMovieReviews","data","console","log","length","className","styles","map","id","author","content","KEY","BASE_URL","fetchPopularMovies","axios","response","status","Error","results","fetchSearchMovies","query","fetchMoviesDetails","getMovieCredits","cast"],"sourceRoot":""}
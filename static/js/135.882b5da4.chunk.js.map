{"version":3,"file":"static/js/135.882b5da4.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","services/moviesApi.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backButton\":\"MovieDetails_backButton__pPF5M\",\"backBtn\":\"MovieDetails_backBtn__rLQ3F\",\"backLink\":\"MovieDetails_backLink__dzd-p\",\"movieDescription\":\"MovieDetails_movieDescription__Gu3H0\",\"userScore\":\"MovieDetails_userScore__mU7Se\",\"detailsText\":\"MovieDetails_detailsText__Wpt3d\",\"detailsLink\":\"MovieDetails_detailsLink__DSsAQ\",\"detailsItem\":\"MovieDetails_detailsItem__zRuv1\",\"detailsDescription\":\"MovieDetails_detailsDescription__LA3m1\",\"movieImg\":\"MovieDetails_movieImg__5UJtY\",\"detailsList\":\"MovieDetails_detailsList__c-mmj\",\"listItemImage\":\"MovieDetails_listItemImage__oPSgd\",\"wraper\":\"MovieDetails_wraper__LBLaL\",\"releaseDate\":\"MovieDetails_releaseDate__kqeBV\",\"title\":\"MovieDetails_title__cUGs9\",\"detailsTitle\":\"MovieDetails_detailsTitle__aL4kz\"};","import { useState, useEffect } from 'react';\nimport { Link, useParams, useLocation, Outlet } from 'react-router-dom';\nimport { fetchMoviesDetails } from 'services/moviesApi';\nimport styles from 'pages/MovieDetails/MovieDetails.module.css'\n\nimport PropTypes from 'prop-types';\n\nconst MovieDetails = () => {\n    const [movieDetails, setMovieDetails] = useState({});\n    const location = useLocation();\n    const { movieId } = useParams();\n    \n\n    const {\n        original_title,\n        genres,\n        overview,\n        poster_path,\n        release_date,\n        vote_average,\n\n    } = movieDetails;\n\n    // const backLink = location.state ? location.state.form : '/';\nconst backLink = location.state?.from ?? '/movies';\n\n    useEffect(() => {\n        const fetchMovie = async () => {\n        \n            \n            setMovieDetails([])\n\n            try {\n                const data = await fetchMoviesDetails(movieId);\n               \n                setMovieDetails(data)\n                \n            } catch (error) {\n                console.log('error')\n               \n            }\n        }\n        fetchMovie();\n    }, [movieId])\n  \n\n\n    return (\n        <div>\n            <Link className={styles.backLink} to={backLink}>\n                <button className={styles.backButton} type='button'>Go Back</button>\n            </Link>\n            {/* <div className={styles.wraper}> */}\n            <div className={styles.wraper}>\n                <div>\n                <h1 className={styles.originalTitle}>{original_title}</h1>\n                <img className={styles.listItemImage} src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt={original_title} />\n                    </div>\n           \n                <div>\n                    <h2 className={styles.title}>Release Date</h2>\n                    <p className={styles.releaseDate}>({release_date?.slice(0, 4)})</p>\n                    <h2 className={styles.title}>Genres</h2>\n                    <p className={styles.detailsText}>{genres?.map(genre => genre.name).join('/')}</p>\n                    <p className={styles.userScore}>User Score: {Math.round(vote_average * 10)}%</p>\n                <h2 className={styles.title}>Overview</h2>  \n                    <p className={styles.detailsText}>{overview}</p> \n                    </div>\n                     </div>\n                \n                \n                \n                           \n           \n            <div className={styles.wraperDetails}>\n                <h2 className={styles.detailsTitle}>Additional information</h2>\n                <ul className={styles.detailsList}>\n                    <li className={styles.detailsItem}>\n                        <Link className={styles.detailsLink} to=\"cast\" state={{from: backLink}}>Cast</Link>\n                    </li>\n                     <li className={styles.detailsItem}>\n                        <Link className={styles.detailsLink} to=\"reviews\" state={{from: backLink}}>Reviews</Link>\n                    </li>\n                </ul>\n                    <Outlet />\n                    </div>\n            </div>\n        // </div>\n    )\n}\n\nMovieDetails.propTypes = {\n    movieDetails: PropTypes.arrayOf(\n        PropTypes.shape({\n        original_title: PropTypes.string.isRequired,\n        genres: PropTypes.string.isRequired,\n        poster_path: PropTypes.string.isRequired,\n        release_date: PropTypes.number.isRequired,\n        vote_average: PropTypes.number.isRequired,\n        overview: PropTypes.string.isRequired,\n        \n    }),\n),\n}\n\nexport default MovieDetails;","import axios from \"axios\";\n\nconst KEY = 'ffa446ff4e98eda704f81d136e56b989';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchPopularMovies = async () => {\n    const response = await axios.get(`${BASE_URL}trending/movie/day?api_key=${KEY}`);\n\n    if (response.status !== 200) {\n        throw new Error('Error, nothing found');\n      \n    }\n    return response.data.results;\n    \n};\n\nexport const fetchSearchMovies = async (query) => {\n    const response = await axios.get(`${BASE_URL}search/movie?api_key=${KEY}&page=1&query=${query}`);\n\n    if (response.status !== 200) {\n        throw new Error('Error, nothing found');\n    }\n    console.log(response.data)\n    return response.data.results;\n    \n};\n\nexport const fetchMoviesDetails = async (movieId) => {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}?api_key=${KEY}`)\n\n    if (response.status !== 200) {\n        throw new Error('Error, nothing found');\n    }\n    return response.data;\n};\n\nexport const getMovieCredits = async (id) => {\n    const response = await axios.get(`${BASE_URL}movie/${id}/credits?api_key=${KEY}`)\nconsole.log(response)\n    if (response.status !== 200) {\n        throw new Error('Error, nothing found');\n    }\n    return response.data.cast;\n}\n\nexport const getMovieReviews  = async (movieId) => {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}`)\n\n    if (response.status !== 200) {\n        throw new Error('Error, nothing found');\n    }\n    return response.data.results;\n}"],"names":["useState","movieDetails","setMovieDetails","location","useLocation","movieId","useParams","original_title","genres","overview","poster_path","release_date","vote_average","backLink","state","from","useEffect","fetchMovie","fetchMoviesDetails","data","console","log","className","styles","to","type","src","alt","slice","map","genre","name","join","Math","round","KEY","BASE_URL","fetchPopularMovies","axios","response","status","Error","results","fetchSearchMovies","query","getMovieCredits","id","cast","getMovieReviews"],"sourceRoot":""}